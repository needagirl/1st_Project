문제1] 자바프로그램에서 예외(Exception)와 에러(Error)에 대하여 설명하고, 
예외처리를 하는 방법을 2가지 작성하고 사용방법과 예제를 작성하라.
  
  자바에서 실행할 때는 런타임 오류가 발생하는데, 발생하는 오류를 예외와 에러 두가지로 구분할 수 있다.
에러는 발생하면 복구할 수 없는 심각한 오류이고, 예외는 발생하여도 코드에 의해서 작동하도록 할 수 있다.

  예외를 처리하는 한가지 방법으로는 try-catch문이 있다. 
사용방법으로는 try구문에 예외가 발생할 수 있는 문장들을 넣고 catch문에서 발생할 종류의 예외를 처리할 수 있도록한다.
발생한 예외의 종류와 일치하는 catch블럭이 없으면 예외는 처리되지 않는다. 예외는 catch문을 여러가지 작성하여 
여러종류의 예외를 처리하도록 만들수 있지만 그 종류가 많고 특정하기 어려운경우 (Exception e)형식으로 조건을 설정하여도 된다.
예제)	
try{
	Class.forName("oracle.jdbc.driver.OracleDriver");
}catch(ClassNotFoundException e){
	e.printStackTrace();
}

  클래스를 불러와서 오라클 드라이브를 로딩하는 구문이다. 이때는 클래스가 없는 예외사항이 발생 할 수 있기 때문에 조건으로
ClassNotFoundException을 catch문으로 받았다. 예외가 발생하였을 때는 확인을 하는 것도 중요한데 
e.printStackTrace(); 메소드를 이용하여 예외발생시 콘솔창에 출력이 되도록한다.

 두번째 방법으로 throws를 이용하여 메서드에 예외를 선언하는 방법이 있다. 이는 예외를 떠넘기는 방법인데 
이는 예외가 처리된 것이 아니고 호출한 메서드에게 전달한 것이기 때문에 프로그램이 끝나기전에 어느 곳에선가는
try-catch문으로 예외처리를 해줘야한다.
예제) 
public void driveLoad() throws ClassNotFoundException{
	Class.forName("oracle.jdbc.driver.OracleDriver");
}
 
  메서드명 옆에 throws를 사용하고 그 옆에 발생하는 예외를 적어주면 된다. 그 수가 많을 경우에는 콤마(,)로 구분한다.






문제2] 다음의 소스코드를 이용하여 발생가능한 예외와 해당예외의 설명을 적고 예외를 처리하는 방법을 작성하라.

  다음 소스코드는 숫자를 입력받아서 계산을 하고 문자배열을 출력하는 매소드이다.

NumberFormatException : 입력받은 값이 숫자형식이 아닐 경우 발생하는 오류

ArithmeticException : 정수를 0으로 나누었을 경우 발생하는 오류

ArrayIndexOutOfBounException : 배열의 범위를 벗어난 경우 발생하는 오류

예외처리 방법)
public ExceptionAnswer(){
	try{
		start()
	}catch(Exception e){
		e.printStackTrace();
	}
}
public void start() throws NumberFormatException,ArithmeticException, ArrayIndexOutOfBounException{
	생략
}
  start메소드는 throws로 예외를 던져주었고 생성자 메소드에서 try-catch문을 이용하여 예외처리를 해주었다.




문제3] 다음의 소스코드가 정상실행 되도록 수정을 하고 오류가 발생한 이유에 대하여 작성하라

  첫번째 if문을 수정하여서 return값이 1이 되도록 수정하겠다.
	수정 전 :  if(value||(setting&&title=="Hello"))
	수정 후 :  if(value==0||(setting&&title.equals("Hello")))
  오류가 발생한 이유는 if문 조건식에서는 True or False가 나오도록 설정해주어야 하는데 현재 코드에서는 그러지 못하고 있다.
value는 숫자 0이기 때문에 이를 참 또는 거짓으로 바꿔주어야 한다. 0과 비교를 하여 그 값이 참이 되도록 하였다.
setting을 그 상태 그대로 true값을 가지고 있기 때문에 그대로 두었다. 마지막으로 title과 "Hello"는 String 값인데 연산자로 
비교하고 있기 때문에 그 값이 제대로 나오지 않는다.  equals메소드를 사용하여 들을 비교하여 참을 얻도록 하였다.




문제4] 다음의 클래스는 Ex클래스가 Test클래스를 상속받은 것이다. 문제점을 찾아 수정하고 문제점의 이유를 찾아 작성하라.
  다음의 문제는 클래스를 상속받고 형변환을 할 경우 문제가 발생하는 경우를 찾는 문제이다.
코드의 6번째줄은 상위클래스를 하위클래스로 형변환 하려고 한 경우이다. 이때에는 하위클래스가 더 큰 범위이고 하위클래스에만
가지고 있는 정보가 있을 수 있기 때문에 형변환을 할 수 없다.
코드의 7번째줄은 Object는 모든 클래스가 상속받고 있기 때문에 모든 클래스는 Object로 형변환 가능하다.
코드의 8번째줄은 String 으로 형변환을 하였는데 애초에 상속관계도 아니고 String클래스에서 정해놓은 변환가능한 형태가 아니기
때문에 오류가 발생한다.
코드의 9번째줄은 Ex클래스를 상위클래스인 Test로 형변환 하였기에 가능하다. 



